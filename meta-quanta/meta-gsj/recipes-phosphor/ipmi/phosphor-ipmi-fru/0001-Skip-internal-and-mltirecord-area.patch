From 8e555ac6218e0396a866f64e8c953889b73d6b49 Mon Sep 17 00:00:00 2001
From: Duke Du <Duke.Du@quantatw.com>
Date: Tue, 2 Apr 2019 16:12:54 +0800
Subject: [PATCH] Skip-internal-and-mltirecord-area

---
 frup.cpp         | 1 +
 writefrudata.cpp | 4 ++++
 2 files changed, 5 insertions(+)

diff --git a/frup.cpp b/frup.cpp
index 9ddb0f6..b84d665 100644
--- a/frup.cpp
+++ b/frup.cpp
@@ -49,6 +49,7 @@
 #include <time.h>
 #include <unistd.h>
 
+#define IPMI_FRU_PARSER_DEBUG 1
 #define TEXTSTR(a) #a
 #define ASSERT(x)                                                              \
     do                                                                         \
diff --git a/writefrudata.cpp b/writefrudata.cpp
index dbf96cb..d467ff3 100644
--- a/writefrudata.cpp
+++ b/writefrudata.cpp
@@ -23,6 +23,7 @@
 using namespace ipmi::vpd;
 using namespace phosphor::logging;
 
+#define __IPMI_DEBUG__ 1
 extern const FruMap frus;
 extern const std::map<Path, InterfaceMap> extras;
 
@@ -452,6 +453,9 @@ int ipmiPopulateFruAreas(uint8_t* fruData, const size_t dataLen,
     for (uint8_t fruEntry = IPMI_FRU_INTERNAL_OFFSET;
          fruEntry < (sizeof(struct common_header) - 2); fruEntry++)
     {
+        if (fruEntry == IPMI_FRU_INTERNAL_OFFSET || fruEntry == IPMI_FRU_MULTI_OFFSET){
+            continue;
+        }
         rc = -1;
         // Actual offset in the payload is the offset mentioned in common header
         // multiplied by 8. Common header is always the first 8 bytes.
-- 
2.7.4

